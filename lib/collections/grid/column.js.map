{"version":3,"sources":["../../../src/components/collections/grid/column.jsx"],"names":[],"mappings":"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","file":"column.js","sourcesContent":["import React from 'react';\nimport { Numbers, validateClassProps } from '../../utilities';\nimport DefaultProps from '../../defaultProps';\nimport classNames from 'classnames';\n\nconst validProps = {\n    aligned: ['right', 'left', 'justified', 'center'],\n    floated: ['right', 'left'],\n    valigned: ['top', 'middle', 'bottom']\n\n};\n\nfunction getClasses(props) {\n    let classes = {\n        column: props.defaultClasses\n    };\n    \n    classes[props.color] = !!props.color;\n    \n    // Widths\n    if (props.width && props.width > 0 && props.width <= 16) {\n        classes[`${Numbers[props.width]} wide`] = true;\n    }\n    \n    if (props.mobileWidth && props.mobileWidth > 0 && props.mobileWidth <= 16) {\n        classes[`${Numbers[props.mobileWidth]} wide mobile`] = true;\n    }\n    \n    if (props.tabletWidth && props.tabletWidth > 0 && props.tabletWidth <= 16) {\n        classes[`${Numbers[props.tabletWidth]} wide tablet`] = true;\n    }\n    \n    if (props.computerWidth && props.computerWidth > 0 && props.computerWidth <= 16) {\n        classes[`${Numbers[props.computerWidth]} wide computer`] = true;\n    }\n    \n    if (props.largeScreenWidth && props.largeScreenWidth > 0 && props.largeScreenWidth <= 16) {\n        classes[`${Numbers[props.largeScreenWidth]} wide large screen`] = true;\n    }\n    \n    if (props.wideScreenWidth && props.wideScreenWidth > 0 && props.wideScreenWidth <= 16) {\n        classes[`${Numbers[props.wideScreenWidth]} wide widescreen`] = true;\n    }\n    \n    if (props.only) {\n        let device;\n        if (Array.isArray(props.only)) {\n            device = props.only.join(' ');\n        } else {\n            device = props.only;\n        }\n        if (device) {\n            classes[`${device} only`] = true;\n        }\n    }\n    \n    return validateClassProps(classes, props, validProps, { valigned: 'aligned' });\n}\n\n/**\n * Grid column\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nlet Column = (props) => {\n    /* eslint-disable no-use-before-define */\n    let {\n        aligned, component, children, defaultClasses, floated, only, width, mobileWidth, tabletWidth,\n        computerWidth, largeScreenWidth, wideScreenWidth, valigned, ...other\n    } = props;\n    /* eslint-enable no-use-before-define */\n    let Component = component;\n    other.className = classNames(other.className, getClasses(props));\n    \n    return (\n        <Component {...other}>\n            {children}\n        </Component>\n    );\n};\n\nColumn.propTypes = {\n    ...DefaultProps.propTypes,\n    /**\n     * Horizontal content alignment\n     */\n    aligned: React.PropTypes.oneOf(['right', 'left', 'center']),\n    /**\n     * Float to the right or left edge of the row\n     */\n    floated: React.PropTypes.oneOf(['right', 'left']),\n    /**\n     * Only visible for types. Could be single type string or array, i.e. only={[\"mobile\",\"tablet\"]}\n     */\n    only: React.PropTypes.oneOfType([\n        React.PropTypes.oneOf([\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\n        ]),\n        React.PropTypes.arrayOf(React.PropTypes.oneOf([\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\n        ]))\n    ]),\n    /**\n     * Column color\n     */\n    color: React.PropTypes.string,\n    /**\n     * Column width for all device types\n     */\n    width: React.PropTypes.number,\n    /**\n     * Column width for mobile\n     */\n    mobileWidth: React.PropTypes.number,\n    /**\n     * Column width for tablet\n     */\n    tabletWidth: React.PropTypes.number,\n    /**\n     * Column width for computer\n     */\n    computerWidth: React.PropTypes.number,\n    /**\n     * Column width for large screens\n     */\n    largeScreenWidth: React.PropTypes.number,\n    /**\n     * Column width for wide screens\n     */\n    wideScreenWidth: React.PropTypes.number,\n    /**\n     * Vertical content alignment\n     */\n    valigned: React.PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\n\nColumn.defaultProps = {\n    ...DefaultProps.defaultProps\n};\n\nexport default Column;\n"]}