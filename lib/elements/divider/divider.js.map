{"version":3,"sources":["../../../src/components/elements/divider/divider.jsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;IAGqB;;;;;;;;;;;iCAsBR;;yBAGiD,KAAK,KAAL,CAHjD;gBAEC,yBAFD;gBAEU,2BAFV;gBAEoB,6BAFpB;gBAE+B,2BAF/B;gBAEyC,6BAFzC;gBAEoD,uCAFpD;gBAGC,uBAHD;gBAGS,uBAHT;gBAGiB,2BAHjB;gBAG2B,yBAH3B;;gBAGuC;;;AAHvC,iBAML,CAAM,SAAN,GAAkB,0BAAW,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAK,UAAL,EAAjC,CAAlB,CANK;;AAQL,mBAAO,gBAAM,aAAN,CACH,KAAK,KAAL,CAAW,SAAX,EACA,KAFG,EAGH,KAAK,KAAL,CAAW,QAAX,CAHJ,CARK;;;;qCAeI;AACT,mBAAO;;AAEH,oBAAI,KAAK,KAAL,CAAW,cAAX;;;AAGJ,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,4BAAY,KAAK,KAAL,CAAW,OAAX,KAAuB,YAAvB;AACZ,0BAAU,KAAK,KAAL,CAAW,OAAX,KAAuB,UAAvB;;;AAGV,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,wBAAQ,KAAK,KAAL,CAAW,OAAX,KAAuB,QAAvB;AACR,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,yBAAS,KAAK,KAAL,CAAW,OAAX,KAAuB,QAAvB;;;AAGT,yBAAS,KAAK,KAAL,CAAW,cAAX;aAjBb,CADS;;;;WArCI;EAAgB,gBAAM,SAAN,UAC1B,YAAY;AACf,aAAS,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CAAC,YAAD,EAAe,UAAf,CAAtB,CAAT;AACA,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,eAAW,gBAAM,SAAN,CAAgB,IAAhB;AACX,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,eAAW,gBAAM,SAAN,CAAgB,SAAhB,CAA0B,CACjC,gBAAM,SAAN,CAAgB,OAAhB,EACA,gBAAM,SAAN,CAAgB,MAAhB,CAFO,CAAX;AAIA,oBAAgB,gBAAM,SAAN,CAAgB,IAAhB;AAChB,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;AACR,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;AACR,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,aAAS,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CAAC,QAAD,EAAW,QAAX,CAAtB,CAAT;UAGG,eAAe;AAClB,eAAW,KAAX;AACA,oBAAgB,IAAhB;;kBAnBa","file":"divider.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\n// Currently header/dividers are only headers. Maybe do both?\nexport default class Divider extends React.Component {\n    static propTypes = {\n        aligned: React.PropTypes.oneOf(['horizontal', 'vertical']),\n        children: React.PropTypes.node,\n        className: React.PropTypes.node,\n        clearing: React.PropTypes.bool,\n        component: React.PropTypes.oneOfType([\n            React.PropTypes.element,\n            React.PropTypes.string\n        ]),\n        defaultClasses: React.PropTypes.bool,\n        header: React.PropTypes.bool,\n        hidden: React.PropTypes.bool,\n        inverted: React.PropTypes.bool,\n        spacing: React.PropTypes.oneOf(['fitted', 'padded'])\n    };\n\n    static defaultProps = {\n        component: 'div',\n        defaultClasses: true\n    };\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { aligned, children, className, clearing, component, defaultClasses,\n              header, hidden, inverted, spacing, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n\n        return React.createElement(\n            this.props.component,\n            other,\n            this.props.children\n        );\n    }\n\n    getClasses() {\n        return {\n            // default\n            ui: this.props.defaultClasses,\n\n            // types\n            header: this.props.header,\n            horizontal: this.props.aligned === 'horizontal',\n            vertical: this.props.aligned === 'vertical',\n\n            // variations\n            clearing: this.props.clearing,\n            fitted: this.props.spacing === 'fitted',\n            hidden: this.props.hidden,\n            inverted: this.props.inverted,\n            section: this.props.spacing === 'padded',\n\n            // component\n            divider: this.props.defaultClasses\n        };\n    }\n}\n"]}