{"version":3,"sources":["../../../src/components/elements/button/labeledbutton.jsx"],"names":[],"mappings":"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","file":"labeledbutton.js","sourcesContent":["import React from 'react';\nimport { Icon, Label, Button } from '../../elements';\nimport { hasChild, hasFirstChild, spliceChildren } from '../../utilities';\nimport classNames from 'classnames';\n\nexport default class LabeledButton extends React.Component {\n    static propTypes = {\n        active: React.PropTypes.bool,\n        basic: React.PropTypes.bool,\n        children: React.PropTypes.node,\n        circular: React.PropTypes.bool,\n        className: React.PropTypes.node,\n        color: React.PropTypes.string,\n        compact: React.PropTypes.bool,\n        component: React.PropTypes.oneOfType([\n            React.PropTypes.element,\n            React.PropTypes.string\n        ]),\n        defaultClasses: React.PropTypes.bool,\n        disabled: React.PropTypes.bool,\n        fluid: React.PropTypes.bool,\n        icon: React.PropTypes.bool,\n        inverted: React.PropTypes.bool,\n        labeled: React.PropTypes.oneOfType([\n            React.PropTypes.string,\n            React.PropTypes.bool\n        ]),\n        loading: React.PropTypes.bool,\n        negative: React.PropTypes.bool,\n        positive: React.PropTypes.bool,\n        primary: React.PropTypes.bool,\n        secondary: React.PropTypes.bool,\n        size: React.PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\n        social: React.PropTypes.string\n    };\n\n    static contextTypes = {\n        isAttached: React.PropTypes.bool,\n        hasIconClass: React.PropTypes.bool\n    };\n\n\n    static defaultProps = {\n        defaultClasses: true\n    };\n\n    /*\n     *  Handles buttons with an image for a label\n     */\n    renderButton() {\n        /* eslint-disable no-use-before-define */\n        let { ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n        other.icon = true;\n        other.labeled = this.props.labeled || true;\n\n        return <Button {...other}>{this.props.children}</Button>;\n    }\n\n    /*\n     *  Wraps any non-label component(s) in a div with\n     */\n    renderChildren() {\n        let children = [];\n\n        // split children into Label and not Label arrays\n        let components = spliceChildren(this.props.children, Label);\n\n        // labeled is consumed by the parent button\n        /* eslint-disable no-use-before-define */\n        let { labeled, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n\n        let icon = (\n            <div\n                {...other}\n                key=\"icon\"\n            >\n                {components.remaining}\n            </div>\n        );\n\n        // if Label was spliced at index 0, put it first\n        if (components.index == 0) {\n            children.push(components.component);\n            children.push(icon);\n        // otherwise last\n        } else {\n            children.push(icon);\n            children.push(components.component);\n        }\n\n        return children;\n    }\n\n    render() {\n        // this must be an icon label\n        if (!hasChild(this.props.children, Label)) {\n            return this.renderButton();\n        }\n\n        // most button props are consumed by the child\n        /* eslint-disable no-use-before-define */\n        let { active, basic, color, circular, compact, fluid,  inverted,\n              size, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(other.className);\n\n        // if the label was the first child, its direction must be left\n        if (hasFirstChild(this.props.children, Label)) {\n            other.labeled = 'left';\n\n        // labels are on the right by default\n        } else {\n            other.labeled = true;\n        }\n\n        return <Button {...other}>{this.renderChildren()}</Button>\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses,\n\n            // position based props\n            labeled: this.props.labeled,\n\n            // types\n            animated: false,\n            basic: this.props.basic,\n            icon: hasChild(this.props.children, Icon) && React.Children.count(this.props.children) === 2,\n            inverted: this.props.inverted,\n\n            // states\n            active: this.props.active,\n            loading: this.props.loading,\n\n            // variations\n            circular: this.props.circular,\n            compact: this.props.compact,\n            fluid: false,\n\n            // component\n            button: this.props.defaultClasses\n        };\n\n        // string types\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.size] = !!this.props.size;\n        classes[this.props.social] = !!this.props.social;\n\n        return classes;\n    }\n}\n"]}