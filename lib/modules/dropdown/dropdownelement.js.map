{"version":3,"sources":["../../../src/components/modules/dropdown/dropdownelement.jsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAM,aAAa;AACf,cAAU,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,WAA9B,EAA2C,aAA3C,EAA0D,cAA1D,CAAV;CADE;;;;;IAOe;;;;;;;;;;;0CA4DC;AACd,mBAAO;AACH,iCAAiB,IAAjB;aADJ,CADc;;;;iCAMT;;yBAKD,KAAK,KAAL,CALC;gBAGD,6BAHC;gBAGU,2BAHV;gBAGoB,uCAHpB;gBAGoC,yBAHpC;gBAG6C,2BAH7C;gBAGuD,qBAHvD;gBAG8D,yBAH9D;gBAID,qBAJC;gBAIM,uBAJN;gBAIc,2BAJd;gBAIwB,2BAJxB;gBAIkC,6BAJlC;;gBAIgD;;;AAJhD,iBAQL,CAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,KAAK,UAAL,EAA5B,CAAlB,CARK;;AAUL,gBAAI,YAAY,SAAZ,CAVC;;AAYL,mBACI;AAAC,yBAAD;gBAAe,KAAf;gBACK,QADL;aADJ,CAZK;;;;qCAmBI;AACT,gBAAI,UAAU;AACV,oBAAI,KAAK,KAAL,CAAW,cAAX;AACJ,0BAAU,KAAK,KAAL,CAAW,cAAX;;AAEV,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,2BAAW,KAAK,KAAL,CAAW,SAAX;aAbX,CADK;;AAiBT,mBAAO,mCAAmB,OAAnB,EAA4B,KAAK,KAAL,EAAY,UAAxC,CAAP,CAjBS;;;;WArFI;EAAwB,gBAAM,SAAN,UAClC,yBACA,uBAAa,SAAb;;;;AAIH,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIR,aAAS,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIT,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIV,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIR,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIV,aAAS,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIT,cAAU,gBAAM,SAAN,CAAgB,SAAhB,CAA0B,CAChC,gBAAM,SAAN,CAAgB,IAAhB,EACA,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CAClB,MADkB,EACV,OADU,EACD,UADC,EACW,WADX,EACwB,aADxB,EACuC,cADvC,CAAtB,CAFgC,CAA1B,CAAV;;;;AASA,eAAW,gBAAM,SAAN,CAAgB,IAAhB;WAGR,oBAAoB;AACvB,qBAAiB,gBAAM,SAAN,CAAgB,IAAhB;UAGd,4BACA,uBAAa,YAAb;AACH,YAAQ,KAAR;;kBAxDa","file":"dropdownelement.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { validateClassProps } from '../../utilities';\nimport DefaultProps  from '../../defaultProps';\n\nconst validProps = {\n    pointing: ['left', 'right', 'top left', 'top right', 'bottom left', 'bottom right']\n};\n\n/**\n * Dropdown element. Base for Select and DropdownMenu.\n */\nexport default class DropdownElement extends React.Component {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Indicates status of dropdown. true for opened, false for closed\n         */\n        active: React.PropTypes.bool,\n        /**\n         * A compact dropdown has no minimum width\n         */\n        compact: React.PropTypes.bool,\n        /**\n         * A disabled dropdown menu or item does not allow user interaction\n         */\n        disabled: React.PropTypes.bool,\n        /**\n         * An errored dropdown can alert a user to a problem\n         */\n        error: React.PropTypes.bool,\n        /**\n         * A dropdown can take the full width of its parent\n         */\n        fluid: React.PropTypes.bool,\n        /**\n         * A dropdown can be formatted to appear inline in other content\n         */\n        inline: React.PropTypes.bool,\n        /**\n         * A dropdown menu can appear to be floating below an element.\n         */\n        floating: React.PropTypes.bool,\n        /**\n         * A dropdown can show that it is currently loading data\n         */\n        loading: React.PropTypes.bool,\n        /**\n         * A dropdown can be formatted so that its menu is pointing\n         */\n        pointing: React.PropTypes.oneOfType([\n            React.PropTypes.bool,\n            React.PropTypes.oneOf([\n                'left', 'right', 'top left', 'top right', 'bottom left', 'bottom right'\n            ])\n        ]),\n        /**\n         * A dropdown can have its menu scroll\n         */\n        scrolling: React.PropTypes.bool\n    };\n\n    static childContextTypes = {\n        isDropdownChild: React.PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        active: false\n    };\n\n\n    getChildContext() {\n        return {\n            isDropdownChild: true\n        };\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { \n            component, children, defaultClasses, compact, disabled, error, loading, \n            fluid, inline, floating, pointing, scrolling, ...other \n        } = this.props;\n        /* eslint-enable no-use-before-define */\n        \n        other.className = classNames(other.className, this.getClasses());\n\n        let Component = component;\n        \n        return (\n            <Component {...other}>\n                {children}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            ui: this.props.defaultClasses,\n            dropdown: this.props.defaultClasses,\n            \n            active: this.props.active,\n            compact: this.props.compact,\n            disabled: this.props.disabled,\n            error: this.props.error,\n            loading: this.props.loading,\n            fluid: this.props.fluid,\n            floating: this.props.floating,\n            inline: this.props.inline,\n            pointing: this.props.pointing,\n            scrolling: this.props.scrolling\n        };\n        \n        return validateClassProps(classes, this.props, validProps);\n    }\n}\n"]}