{"version":3,"sources":["../../../src/components/modules/dropdown/dropdownmenu.jsx"],"names":[],"mappings":"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","file":"dropdownmenu.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Transition from 'react-motion-ui-pack';\nimport EventListener from 'react-event-listener';\nimport { isNodeInRoot } from '../../utilities';\nimport { Icon, Text } from '../../elements';\nimport { Menu } from '../../views';\nimport DropdownElement from './dropdownelement';\nimport elementType from 'react-prop-types/lib/elementType'; \n\n\n/**\n * Dropdown menu with animations\n */\nexport default class DropdownMenu extends React.Component {\n    static propTypes = {\n        ...DropdownElement.propTypes,\n        /**\n         * Active/Close menu\n         */\n        active: React.PropTypes.bool,\n        /**\n         * Enter animations transforms\n         */\n        enterAnimation: React.PropTypes.object,\n        /**\n         * Menu icon\n         */\n        icon: React.PropTypes.string,\n        /**\n         * Menu label\n         */\n        label: React.PropTypes.string,\n        /**\n         * Leave animation\n         */\n        leaveAnimation: React.PropTypes.object,\n        /**\n         * Specify component to be used as Menu.\n         * Usually is should be menu but with custom options applied (for example inverted). \n         * DropdownMenu will pass some props to your Menu component, so you're responsive for passing it down to the level\n         */\n        menuComponent: elementType,\n        /**\n         * Menu active value\n         */\n        menuValue: React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.arrayOf(React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]))\n        ]),\n        /**\n         * Callback for active item change. Will not be fired if menuValue was omitted\n         * Will pass new menuValue or array of new menuValue\n         * If all items were unselected would pass null if menuValue is single value or empty array if menuValue is array\n         */\n        onMenuChange: React.PropTypes.func,\n        /**\n         * Callback for menu item click\n         */\n        onMenuItemClick: React.PropTypes.func,\n        /**\n         * Callback will be called when menu wants to be closed (for ex. from outside click)\n         */\n        onRequestClose: React.PropTypes.func\n    };\n\n    static defaultProps = {\n        ...DropdownElement.defaultProps,\n        active: false,\n        icon: 'dropdown',\n        enterAnimation: {\n            height: 'auto'\n        },\n        leaveAnimation: {\n            height: 0\n        },\n        onMenuItemClick: () => {},\n        onMenuChange: () => {},\n        onRequestClose: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * Menu reference\n         */\n        this.menuRef = null;\n        \n    }\n    \n    /**\n     * Outside dropdown click\n     * @param {React.MouseEvent} e\n     */\n    onOutsideDropdownClick = (e) => {\n        const { active, onRequestClose } = this.props;\n        if (!active) {\n            return;\n        }\n        const dropdownElement = ReactDOM.findDOMNode(this);\n        if (dropdownElement) {\n            if (!isNodeInRoot(e.target, dropdownElement)) {\n                onRequestClose();\n            }\n        }\n    };\n\n\n    /**\n     * Renders dropdown icon\n     * @returns {*}\n     */\n    renderMenuIcon() {\n        if (typeof this.props.component === 'function') {\n            return null;\n        } else {\n            return <Icon name={this.props.icon}/>\n        }\n    }\n\n    /**\n     * Renders dropdown text\n     * @returns {*}\n     */\n    renderMenuText() {\n        if (typeof this.props.component === 'function' || !this.props.label) {\n            return null;\n        } else {\n            return <Text>{this.props.label}</Text>\n        }\n    }\n\n    /**\n     * Render\n     * @returns {JSX.Element}\n     */\n    render() {\n        /* eslint-disable no-use-before-define */\n        let {\n            active, enterAnimation, leaveAnimation, children, icon, label, menuComponent, menuValue, \n            onMenuChange, onMenuItemClick, onRequestClose, ...other\n        } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        const MenuComponent = menuComponent || Menu;\n\n\n        return (\n            <DropdownElement\n                {...other}\n                active={active}\n            >\n                {/* This will embed <noscript></noscript> inside dropdown div. Shouldn't cause any problems */}\n                <EventListener elementName=\"document\"\n                               onMouseDown={this.onOutsideDropdownClick}\n                               onTouchStart={this.onOutsideDropdownClick}/>\n                {this.renderMenuText()}\n                {this.renderMenuIcon()}\n                <Transition\n                    component={false}\n                    enter={enterAnimation}\n                    leave={leaveAnimation}\n                >\n                    {active &&\n                    <MenuComponent key=\"menu\"\n                                   menuValue={menuValue}\n                                   onMenuChange={onMenuChange}\n                                   onMenuItemClick={onMenuItemClick}\n                                   ref={ref => this.menuRef = ref}\n                                   style={{ overflow: 'hidden' }}\n                    >\n                        {children}\n                    </MenuComponent>\n                    }\n                </Transition>\n            </DropdownElement>\n        );\n    }\n}\n\n"]}