{"version":3,"sources":["../../../src/components/modules/accordion/accordionbody.jsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;;IAGqB;;;AAWjB,aAXiB,aAWjB,CAAY,KAAZ,EAAmB;8BAXF,eAWE;;sEAXF,0BAYP,QADS;KAAnB;;iBAXiB;;iCAeR;AACL,gBAAI,UAAU;;AAEV,oBAAI,KAAK,KAAL,CAAW,cAAX;;;;;;;;;;;AAWJ,yBAAS,IAAT;AACA,wBAAQ,IAAR;aAdA;;;;;;;;;;;;AADC,gBA6BD,YAAY;AACZ,uBAAO,KAAK,KAAL,CAAW,MAAX;AACP,4BAAY;AACR,0BAAM,WAAN;AACA,0BAAM,WAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAJJ;AAQA,2BAAW;AACP,0BAAM,SAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAHJ;aAVA,CA7BC;;AAgDL,gBAAI,iBAAiB;AACjB,uBAAO,KAAK,KAAL,CAAW,MAAX;AACP,4BAAY;AACR,0BAAM,QAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,UAAR;qBADJ;iBAHJ;AAOA,2BAAW;AACP,0BAAM,SAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAHJ;aATA;;;AAhDC,mBAqEG;;;AACI,+BAAW,SAAX;AACA,+BAAW,0BAAW,OAAX,CAAX;AACA,yBAAI,SAAJ;iBAHJ;gBAKI;;sBAAS,WAAW,cAAX,EAAT;oBACK,KAAK,KAAL,CAAW,QAAX;iBANT;aADR,CApEK;;;;WAfQ;4BACV,YAAY;AACf,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;AACR,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,oBAAgB,gBAAM,SAAN,CAAgB,IAAhB;UAGb,eAAe;AAClB,oBAAgB,IAAhB;;kBARa","file":"accordionbody.js","sourcesContent":["import React, { Component } from 'react';\nimport { Animate } from '../../modules';\nimport classNames from 'classnames';\n\n// TODO: image and horizontal list examples\nexport default class AccordionBody extends Component {\n    static propTypes = {\n        active: React.PropTypes.bool,\n        children: React.PropTypes.node,\n        defaultClasses: React.PropTypes.bool\n    };\n\n    static defaultProps = {\n        defaultClasses: true\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses,\n\n            // positioning\n\n            // types\n\n            // states\n\n            // variations\n\n            // component\n            content: true,\n            active: true\n        };\n\n        /*\n        let didMount = function() {\n            this.setScrollHeight();\n            let computedStyle = window.getComputedStyle(ReactDOM.findDOMNode(this), null);\n\n            this.state.paddingTop = parseFloat(computedStyle.getPropertyValue('padding-top'));\n            this.state.paddingBottom = parseFloat(computedStyle.getPropertyValue('padding-bottom'));\n        };\n        */\n\n        //\n        let animation = {\n            state: this.props.active,\n            enterState: {\n                name: 'slideDown',\n                ease: 'cubic-out',\n                duration: 250,\n                options: {\n                    easing: 'cubic-out'\n                }\n            },\n            exitState: {\n                name: 'slideUp',\n                duration: 300,\n                options: {\n                    easing: 'cubic-out'\n                }\n            }\n        };\n\n        let childAnimation = {\n            state: this.props.active,\n            enterState: {\n                name: 'fadeIn',\n                duration: 300,\n                options: {\n                    easing: 'cubic-in'\n                }\n            },\n            exitState: {\n                name: 'fadeOut',\n                duration: 200,\n                options: {\n                    easing: 'cubic-out'\n                }\n            }\n        }\n\n\n        // handle all string or mixed string/bool props\n        return (\n                <Animate \n                    animation={animation}\n                    className={classNames(classes)}\n                    key=\"animate\"\n                > \n                    <Animate animation={childAnimation}>\n                        {this.props.children}\n                    </Animate>\n                </Animate>\n        );\n    }\n}"]}