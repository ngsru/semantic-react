{"version":3,"sources":["../../../src/components/views/comment/comment.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;;;;;AAEA,SAAS,cAAT,CAAwB,QAAxB,EAAkC;AAC9B,QAAI,kBAAkB,EAAlB,CAD0B;AAE9B,QAAI,kBAAkB,EAAlB,CAF0B;;AAI9B,oBAAM,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,iBAAS;;AAEtC,YAAI,MAAM,IAAN,oBAAJ,EAA0B;AACtB,4BAAgB,IAAhB,CACI,gBAAM,YAAN,CACI,KADJ,EAEI;AACI,2BAAW,GAAX;AACA,wBAAQ,IAAR;AACA,qBAAK,eAAL;AACA,gCAAgB,KAAhB;aANR,EAQI,MAAM,QAAN,CATR,EADsB;SAA1B,MAaO;AACH,mBAAO,gBAAgB,IAAhB,CAAqB,KAArB,CAAP,CADG;SAbP;KAF6B,CAAjC,CAJ8B;;AAwB9B,oBAAgB,IAAhB,CACI;;UAAS,KAAI,gBAAJ,EAAT;QACK,eADL;KADJ,EAxB8B;;AA8B9B,WAAO,eAAP,CA9B8B;CAAlC;;AAiCA,IAAI,UAAU,SAAV,OAAU,OAAkD;QAA/C,yBAA+C;QAArC,2BAAqC;QAA1B,2BAA0B;;QAAZ,+EAAY;;AAC5D,UAAM,SAAN,GAAkB,0BAAW,SAAX,EAAsB,EAAE,SAAS,IAAT,EAAxB,CAAlB,CAD4D;;AAG5D,WAAO,gBAAM,aAAN,CACH,SADG,EAEH,KAFG,EAGH,eAAe,QAAf,CAHG,CAAP,CAH4D;CAAlD;;AAUd,QAAQ,SAAR,GAAoB;AAChB,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,eAAW,gBAAM,SAAN,CAAgB,GAAhB;AACX,eAAW,gBAAM,SAAN,CAAgB,SAAhB,CAA0B,CACjC,gBAAM,SAAN,CAAgB,OAAhB,EACA,gBAAM,SAAN,CAAgB,MAAhB,CAFO,CAAX;CAHJ;;AASA,QAAQ,YAAR,GAAuB;AACnB,eAAW,KAAX;CADJ;;kBAIe","file":"comment.js","sourcesContent":["import React from 'react';\nimport { Image, Content } from '../../elements';\nimport classNames from 'classnames';\n\nfunction renderChildren(children) {\n    let commentChildren = [];\n    let contentChildren = [];\n\n    React.Children.forEach(children, child => {\n        // remove the Image default classes\n        if (child.type === Image) {\n            commentChildren.push(\n                React.cloneElement(\n                    child,\n                    {\n                        component: 'a',\n                        avatar: true,\n                        key: 'commentAvatar',\n                        defaultClasses: false\n                    },\n                    child.children\n                )\n            );\n        } else {\n            return contentChildren.push(child);\n        }\n    });\n\n    commentChildren.push(\n        <Content key=\"commentContent\">\n            {contentChildren}\n        </Content>\n    );\n\n    return commentChildren;\n}\n\nlet Comment = ({ children, className, component, ...other }) => {\n    other.className = classNames(className, { comment: true });\n\n    return React.createElement(\n        component,\n        other,\n        renderChildren(children)\n    );\n};\n\nComment.propTypes = {\n    children: React.PropTypes.node,\n    className: React.PropTypes.any,\n    component: React.PropTypes.oneOfType([\n        React.PropTypes.element,\n        React.PropTypes.string\n    ])\n}\n\nComment.defaultProps = {\n    component: 'div'\n}\n\nexport default Comment;\n"]}